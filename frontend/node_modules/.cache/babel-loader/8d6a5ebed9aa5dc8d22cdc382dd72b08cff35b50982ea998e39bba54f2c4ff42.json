{"ast":null,"code":"import React from'react';import{Card,CardHeader,CardTitle,CardContent}from'./ui/card';import{Table,TableHeader,TableBody,TableHead,TableRow,TableCell}from'./ui/table';import _ from'lodash';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const DataDisplay=_ref=>{let{data,period}=_ref;if(!data||data.length===0)return null;// Função auxiliar para validar e converter datas\nconst parseDate=dateStr=>{if(!dateStr||dateStr==='EM ATENDIMENTO')return null;try{const[day,month,year]=dateStr.split('/').map(Number);return new Date(year,month-1,day);}catch{return null;}};// Filtra os dados pelo período selecionado com validação melhorada\nconst filteredData=data.filter(item=>{if(!(item!==null&&item!==void 0&&item.Data_Entrada))return false;const entryDate=parseDate(item.Data_Entrada);if(!entryDate)return false;return entryDate.getMonth()+1===period.month&&entryDate.getFullYear()===period.year;});// Agrupa os dados por status\nconst statusGroups=_.groupBy(filteredData,'Status');const statusCounts=_.mapValues(statusGroups,group=>group.length);// Agrupa os dados por setor\nconst setorGroups=_.groupBy(filteredData,'Setor');const setorCounts=_.mapValues(setorGroups,group=>group.length);return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsxs(CardTitle,{children:[\"Resumo dos Dados - \",period.month,\"/\",period.year]})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4\",children:[/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{className:\"text-lg\",children:\"Por Status\"})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableHead,{children:\"Status\"}),/*#__PURE__*/_jsx(TableHead,{children:\"Quantidade\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:Object.entries(statusCounts).map(_ref2=>{let[status,count]=_ref2;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:status}),/*#__PURE__*/_jsx(TableCell,{children:count})]},status);})})]})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{className:\"text-lg\",children:\"Por Setor\"})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableHead,{children:\"Setor\"}),/*#__PURE__*/_jsx(TableHead,{children:\"Quantidade\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:Object.entries(setorCounts).map(_ref3=>{let[setor,count]=_ref3;return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:setor}),/*#__PURE__*/_jsx(TableCell,{children:count})]},setor);})})]})})]})]})})]}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{children:/*#__PURE__*/_jsx(CardTitle,{children:\"Dados Detalhados\"})}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto\",children:/*#__PURE__*/_jsxs(Table,{children:[/*#__PURE__*/_jsx(TableHeader,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableHead,{children:\"Nome\"}),/*#__PURE__*/_jsx(TableHead,{children:\"Setor\"}),/*#__PURE__*/_jsx(TableHead,{children:\"Status\"}),/*#__PURE__*/_jsx(TableHead,{children:\"Data Entrada\"}),/*#__PURE__*/_jsx(TableHead,{children:\"Data Sa\\xEDda\"}),/*#__PURE__*/_jsx(TableHead,{children:\"Hospital\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:filteredData.map((item,index)=>/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{children:item.Nome}),/*#__PURE__*/_jsx(TableCell,{children:item.Setor}),/*#__PURE__*/_jsx(TableCell,{children:item.Status}),/*#__PURE__*/_jsx(TableCell,{children:item.Data_Entrada}),/*#__PURE__*/_jsx(TableCell,{children:item.Data_Saida}),/*#__PURE__*/_jsx(TableCell,{children:item.Hospital})]},index))})]})})})]})]});};export default DataDisplay;","map":{"version":3,"names":["React","Card","CardHeader","CardTitle","CardContent","Table","TableHeader","TableBody","TableHead","TableRow","TableCell","_","jsxs","_jsxs","jsx","_jsx","DataDisplay","_ref","data","period","length","parseDate","dateStr","day","month","year","split","map","Number","Date","filteredData","filter","item","Data_Entrada","entryDate","getMonth","getFullYear","statusGroups","groupBy","statusCounts","mapValues","group","setorGroups","setorCounts","className","children","Object","entries","_ref2","status","count","_ref3","setor","index","Nome","Setor","Status","Data_Saida","Hospital"],"sources":["C:/Users/fagun/OneDrive/Desktop/indicadores-upa/frontend/src/components/DataDisplay.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Card, CardHeader, CardTitle, CardContent } from './ui/card';\r\nimport { Table, TableHeader, TableBody, TableHead, TableRow, TableCell } from './ui/table';\r\nimport _ from 'lodash';\r\n\r\nconst DataDisplay = ({ data, period }) => {\r\n  if (!data || data.length === 0) return null;\r\n\r\n  // Função auxiliar para validar e converter datas\r\n  const parseDate = (dateStr) => {\r\n    if (!dateStr || dateStr === 'EM ATENDIMENTO') return null;\r\n    try {\r\n      const [day, month, year] = dateStr.split('/').map(Number);\r\n      return new Date(year, month - 1, day);\r\n    } catch {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Filtra os dados pelo período selecionado com validação melhorada\r\n  const filteredData = data.filter(item => {\r\n    if (!item?.Data_Entrada) return false;\r\n    const entryDate = parseDate(item.Data_Entrada);\r\n    if (!entryDate) return false;\r\n    \r\n    return (\r\n      entryDate.getMonth() + 1 === period.month &&\r\n      entryDate.getFullYear() === period.year\r\n    );\r\n  });\r\n\r\n  // Agrupa os dados por status\r\n  const statusGroups = _.groupBy(filteredData, 'Status');\r\n  const statusCounts = _.mapValues(statusGroups, group => group.length);\r\n\r\n  // Agrupa os dados por setor\r\n  const setorGroups = _.groupBy(filteredData, 'Setor');\r\n  const setorCounts = _.mapValues(setorGroups, group => group.length);\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Resumo dos Dados - {period.month}/{period.year}</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg\">Por Status</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>Status</TableHead>\r\n                      <TableHead>Quantidade</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {Object.entries(statusCounts).map(([status, count]) => (\r\n                      <TableRow key={status}>\r\n                        <TableCell>{status}</TableCell>\r\n                        <TableCell>{count}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"text-lg\">Por Setor</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <Table>\r\n                  <TableHeader>\r\n                    <TableRow>\r\n                      <TableHead>Setor</TableHead>\r\n                      <TableHead>Quantidade</TableHead>\r\n                    </TableRow>\r\n                  </TableHeader>\r\n                  <TableBody>\r\n                    {Object.entries(setorCounts).map(([setor, count]) => (\r\n                      <TableRow key={setor}>\r\n                        <TableCell>{setor}</TableCell>\r\n                        <TableCell>{count}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Dados Detalhados</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <div className=\"overflow-x-auto\">\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead>Nome</TableHead>\r\n                  <TableHead>Setor</TableHead>\r\n                  <TableHead>Status</TableHead>\r\n                  <TableHead>Data Entrada</TableHead>\r\n                  <TableHead>Data Saída</TableHead>\r\n                  <TableHead>Hospital</TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {filteredData.map((item, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell>{item.Nome}</TableCell>\r\n                    <TableCell>{item.Setor}</TableCell>\r\n                    <TableCell>{item.Status}</TableCell>\r\n                    <TableCell>{item.Data_Entrada}</TableCell>\r\n                    <TableCell>{item.Data_Saida}</TableCell>\r\n                    <TableCell>{item.Hospital}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}